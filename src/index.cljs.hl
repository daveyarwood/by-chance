(page "index.html"
  (:require [by-chance.music :as music]))

(defc options
  {:dance {:body-parts [], :images []}
   :music {:scales music/scales, :qualities []}})

;; temporary while developing
(defn random-selections
  [n path]
  (cell= (->> (get-in options path) shuffle (take n))))

(defc current-view :options)

(defn- classes
  [class-names]
  (zipmap class-names (repeat true)))

(defelem pill
  [{:keys [view] :as attr} kids]
  (button
    (merge
      {:class (cell= (merge (classes [:inline-block :text-white :font-bold
                                      :text-xs :py-2 :px-4 :m-1 :rounded-full
                                      :focus:outline-none])
                            {:bg-blue            (= view current-view)
                             :bg-blue-light      (not= view current-view)}))
       :click #(reset! current-view view)}
      attr)
    kids))

(html
  (head
    (title "by chance")
    (link :href "tailwind.min.css" :rel "stylesheet" :type "text/css"))
    ;; (link :href "app.css" :rel "stylesheet" :type "text/css"))
  (body :class "bg-grey-lighter text-blue-darkest  container mx-auto"
    (h1 :class "m-2"
        "by chance")
    (pill :view :options
          "options")
    (pill :view :selections
          "selections")
    (div :class "flex flex-wrap mx-auto"
         :toggle (cell= (= :selections current-view))
         (->> (for [[label path]
                    [["body parts"    [:dance :body-parts]]
                     ["images"        [:dance :images]]
                     ["music scale"   [:music :scales]]
                     ["music quality" [:music :quality]]]]
                (div :class "w-auto p-2"
                     (div :class "text-center p-2"
                       (h2 label)
                       (ol :class "list-reset"
                         (for-tpl [selection (random-selections 10 path)]
                           (li selection))))))))))

