(ns by-chance.music)

(def letters     ["A" "B" "C" "D" "E" "F" "G"])
(def accidentals ["" "#" "b"])
(def notes       (for [letter letters, accidental accidentals
                       :let [note (str letter accidental)]
                       :when (not (#{"E#" "B#" "Cb" "Fb"} note))]
                   note))

(def majory-scale-types
  ["major" "major pentatonic" "lydian" "mixolydian"])

(def minory-scale-types
  ["minor" "minor pentatonic" "dorian" "phrygian" "locrian"])

(def diatonic-scale-types
  (concat majory-scale-types minory-scale-types))

(def diatonic-scales
  "All possible diatonic scales, with certain enharmonic spellings filtered out
   according to my personal preference (which is admittedly arbitrary)."
  (for [root-note notes, scale-type diatonic-scale-types
        :when (not (or (and (#{"F#" "C#" "G#" "D#" "A#"} root-note)
                            ((set majory-scale-types) scale-type))
                       (and (#{"A#" "D#" "Ab" "Db" "Gb" } root-note)
                            ((set minory-scale-types) scale-type))))]
    (str root-note \space scale-type)))

(def other-scales
  "I want these scale types to have the same chance of coming up as the diatonic
   scale types, but the diatonic scale types have root notes, e.g. Ab
   mixolydian, whereas there is no note associated with these scale types.

   To remedy this, we include a proportional amount of these scale types."
  (->> ["octatonic" "chromatic" "sound collage"]
       (map #(repeat (count notes) %))
       (apply concat)))

(def scales
  (concat diatonic-scales other-scales))

